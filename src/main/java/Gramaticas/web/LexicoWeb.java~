/* The following code was generated by JFlex 1.7.0 */

package Gramaticas.web;
import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.LinkedList;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexico.jflex</tt>
 */
public class LexicoWeb implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\2\1\11\1\12\1\1\22\0\1\24\1\36\1\33"+
    "\1\0\1\75\5\0\1\13\1\0\1\55\1\14\1\7\1\10\1\6"+
    "\1\34\10\5\1\47\1\0\1\15\1\32\1\35\1\16\1\0\1\37"+
    "\1\56\1\43\1\46\1\26\1\50\1\62\1\64\1\31\1\4\1\66"+
    "\1\40\1\61\1\23\1\22\1\60\1\57\1\27\1\21\1\44\1\45"+
    "\1\25\1\63\1\17\1\4\1\41\1\53\1\67\1\54\1\0\1\42"+
    "\1\0\1\37\1\74\1\43\1\46\1\26\1\73\1\62\1\64\1\31"+
    "\1\4\1\66\1\40\1\61\1\70\1\22\1\60\1\57\1\71\1\21"+
    "\1\72\1\45\1\25\1\63\1\17\1\4\1\41\1\51\1\76\1\52"+
    "\7\0\1\11\252\0\2\30\115\0\1\20\u1ea8\0\1\11\1\11\u0100\0"+
    "\1\65\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\1\3\2\4\1\1\1\5\1\6"+
    "\1\1\5\3\1\1\1\3\1\6\1\1\1\6\1\1"+
    "\6\3\1\7\1\3\1\10\1\11\1\12\1\13\1\14"+
    "\2\3\1\15\1\4\2\0\1\2\1\0\1\5\2\4"+
    "\4\0\1\3\1\16\6\3\1\0\1\17\1\3\1\17"+
    "\1\0\1\20\2\0\12\3\1\0\1\3\1\0\2\3"+
    "\1\0\5\3\2\4\7\0\2\3\1\21\2\3\1\0"+
    "\1\3\1\0\3\3\3\0\3\3\1\0\1\22\12\3"+
    "\1\0\1\3\1\0\1\3\1\0\2\3\2\0\3\3"+
    "\1\23\1\0\2\3\1\4\6\0\1\3\1\0\3\3"+
    "\1\0\1\3\1\0\2\3\1\0\1\3\3\0\3\3"+
    "\1\0\2\3\1\0\4\3\1\0\3\3\1\24\1\0"+
    "\1\3\1\0\1\3\1\0\2\3\3\0\3\3\2\0"+
    "\1\3\1\0\1\3\1\4\6\0\1\3\1\0\4\3"+
    "\1\0\1\3\1\0\2\3\2\25\3\0\3\3\1\0"+
    "\2\3\1\0\2\3\1\26\1\3\2\27\1\0\2\3"+
    "\1\0\1\3\1\0\1\3\1\0\2\3\1\30\2\0"+
    "\1\30\2\3\1\31\1\0\1\3\1\0\1\3\6\0"+
    "\1\3\1\0\1\3\1\32\2\3\1\0\1\3\1\0"+
    "\2\3\1\0\1\33\1\0\1\3\1\33\1\3\1\0"+
    "\2\3\1\0\3\3\1\0\2\3\2\34\1\0\1\3"+
    "\1\0\2\3\2\0\2\3\1\0\1\3\1\0\1\3"+
    "\6\0\1\3\1\0\3\3\1\0\1\3\1\0\1\3"+
    "\1\35\2\0\2\3\1\0\2\3\1\0\3\3\1\0"+
    "\2\3\1\0\1\3\2\36\2\3\1\37\1\40\1\37"+
    "\1\40\1\0\1\3\1\0\1\3\6\0\1\3\2\41"+
    "\2\3\1\0\1\3\1\0\1\3\2\0\2\3\1\0"+
    "\2\3\1\0\1\3\2\42\1\3\2\43\1\0\1\3"+
    "\1\0\1\3\1\0\3\3\2\44\1\0\1\3\6\0"+
    "\1\3\1\0\1\3\1\0\1\3\1\0\1\3\2\45"+
    "\1\0\1\46\1\3\1\46\1\0\2\3\1\0\2\3"+
    "\1\0\1\3\1\0\1\3\3\0\5\3\1\0\1\3"+
    "\1\47\5\0\1\3\1\0\1\3\1\0\1\3\3\0"+
    "\3\3\1\0\1\3\1\0\1\50\1\3\1\0\2\3"+
    "\1\0\1\3\1\0\1\3\3\0\4\3\1\0\1\3"+
    "\1\0\1\3\4\0\2\51\1\0\1\3\1\0\1\3"+
    "\3\0\3\3\2\52\1\0\1\3\1\0\1\3\1\53"+
    "\1\0\1\3\1\0\1\3\3\0\4\3\1\0\1\3"+
    "\3\0\3\3\5\0\1\3\2\54\3\0\3\3\1\0"+
    "\1\3\1\0\1\3\1\0\1\3\1\0\1\3\3\0"+
    "\3\3\1\0\1\3\1\0\1\3\3\0\3\3\5\0"+
    "\1\3\3\0\3\3\1\0\1\3\2\55\2\56\1\0"+
    "\1\3\1\57\2\0\1\57\2\3\1\0\1\3\1\0"+
    "\1\3\3\0\3\3\4\0\2\60\3\0\3\3\1\0"+
    "\1\3\1\0\1\3\2\0\2\3\2\61\1\0\1\3"+
    "\3\0\3\3\5\0\1\62\1\0\1\3\1\62\1\3"+
    "\1\0\1\3\2\63\1\64\1\0\1\64\1\3\1\0"+
    "\1\3\3\0\3\3\5\0\1\65\1\3\1\65\1\0"+
    "\1\3\2\66\1\0\1\3\1\0\1\67\1\0\1\3"+
    "\1\67\1\3\5\0\1\3\1\0\1\3\1\0\1\3"+
    "\1\0\1\70\1\3\1\70\5\0\1\3\1\0\1\71"+
    "\2\72\1\0\1\3\4\0\2\73\1\74\1\0\1\3"+
    "\4\0\2\75\2\0\1\76\6\0\1\77\1\100\7\0"+
    "\1\101\1\0\1\102";

  private static int [] zzUnpackAction() {
    int [] result = new int[720];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\77\0\176\0\77\0\275\0\374\0\u013b\0\u017a"+
    "\0\u01b9\0\u01f8\0\u0237\0\u0276\0\u02b5\0\u02f4\0\u0333\0\u0372"+
    "\0\u03b1\0\u03f0\0\77\0\u042f\0\u046e\0\u046e\0\u04ad\0\u04ec"+
    "\0\u052b\0\u056a\0\u05a9\0\u05e8\0\77\0\u0627\0\77\0\77"+
    "\0\77\0\77\0\77\0\u0666\0\u06a5\0\77\0\u06e4\0\u0723"+
    "\0\u0762\0\u07a1\0\u07e0\0\u081f\0\u085e\0\u089d\0\u08dc\0\u091b"+
    "\0\u095a\0\u0999\0\u09d8\0\275\0\u0a17\0\u0a56\0\u0a95\0\u0ad4"+
    "\0\u0b13\0\u0b52\0\u0b91\0\u0bd0\0\u0c0f\0\u0c4e\0\u0c8d\0\77"+
    "\0\u0ccc\0\u0d0b\0\u0d4a\0\u0d89\0\u0dc8\0\u0e07\0\u0e46\0\u0e85"+
    "\0\u0ec4\0\u0f03\0\u0f42\0\u0f81\0\u0fc0\0\u0fff\0\u103e\0\u107d"+
    "\0\u10bc\0\u10fb\0\u113a\0\u1179\0\u11b8\0\u11f7\0\u1236\0\u1275"+
    "\0\u0723\0\u12b4\0\u12f3\0\u1332\0\u1371\0\u13b0\0\u13ef\0\u142e"+
    "\0\u146d\0\u14ac\0\275\0\u14eb\0\u152a\0\u1569\0\u15a8\0\u15e7"+
    "\0\u1626\0\u1665\0\u16a4\0\u16e3\0\u1722\0\u1761\0\u17a0\0\u17df"+
    "\0\u181e\0\u185d\0\275\0\u189c\0\u18db\0\u191a\0\u1959\0\u1998"+
    "\0\u19d7\0\u1a16\0\u1a55\0\u1a94\0\u1ad3\0\u1b12\0\u1b51\0\u1b90"+
    "\0\u1bcf\0\u1c0e\0\u1c4d\0\u1c8c\0\u1ccb\0\u1d0a\0\u1d49\0\u1d88"+
    "\0\u1dc7\0\275\0\u1e06\0\u1e45\0\u1e84\0\u1ec3\0\u1f02\0\u1f41"+
    "\0\u1f80\0\u1fbf\0\u1ffe\0\u203d\0\u207c\0\u20bb\0\u20fa\0\u2139"+
    "\0\u2178\0\u21b7\0\u21f6\0\u2235\0\u2274\0\u22b3\0\u22f2\0\u2331"+
    "\0\u2370\0\u23af\0\u23ee\0\u242d\0\u246c\0\u24ab\0\u24ea\0\u2529"+
    "\0\u2568\0\u25a7\0\u25e6\0\u2625\0\u2664\0\u26a3\0\u26e2\0\u2721"+
    "\0\u2760\0\u279f\0\275\0\u27de\0\u281d\0\u285c\0\u289b\0\u28da"+
    "\0\u2919\0\u2958\0\u2997\0\u29d6\0\u2a15\0\u2a54\0\u2a93\0\u2ad2"+
    "\0\u2b11\0\u2b50\0\u2b8f\0\u2bce\0\u2c0d\0\u2c4c\0\u2c8b\0\u2cca"+
    "\0\u2d09\0\u2d48\0\u2d87\0\u2dc6\0\u2e05\0\u2e44\0\u2e83\0\u2ec2"+
    "\0\u2f01\0\u2f40\0\u2f7f\0\u2fbe\0\u2ffd\0\u303c\0\u307b\0\77"+
    "\0\275\0\u30ba\0\u30f9\0\u3138\0\u3177\0\u31b6\0\u31f5\0\u3234"+
    "\0\u3273\0\u32b2\0\u32f1\0\u3330\0\u336f\0\275\0\u33ae\0\77"+
    "\0\275\0\u33ed\0\u342c\0\u346b\0\u34aa\0\u34e9\0\u3528\0\u3567"+
    "\0\u35a6\0\u35e5\0\u3624\0\77\0\u3663\0\u36a2\0\275\0\u36e1"+
    "\0\u3720\0\77\0\u375f\0\u379e\0\u37dd\0\u381c\0\u385b\0\u389a"+
    "\0\u38d9\0\u3918\0\u3957\0\u3996\0\u39d5\0\u3a14\0\u3a53\0\275"+
    "\0\u3a92\0\u3ad1\0\u3b10\0\u3b4f\0\u3b8e\0\u3bcd\0\u3c0c\0\u3c4b"+
    "\0\77\0\u3c8a\0\u3cc9\0\275\0\u3d08\0\u3d47\0\u3d86\0\u3dc5"+
    "\0\u3e04\0\u3e43\0\u3e82\0\u3ec1\0\u3f00\0\u3f3f\0\u3f7e\0\77"+
    "\0\275\0\u3fbd\0\u3ffc\0\u403b\0\u407a\0\u40b9\0\u40f8\0\u4137"+
    "\0\u4176\0\u41b5\0\u41f4\0\u4233\0\u4272\0\u42b1\0\u42f0\0\u432f"+
    "\0\u436e\0\u43ad\0\u43ec\0\u442b\0\u446a\0\u44a9\0\u44e8\0\u4527"+
    "\0\u4566\0\u45a5\0\u45e4\0\u4623\0\u4662\0\275\0\u46a1\0\u46e0"+
    "\0\u471f\0\u475e\0\u479d\0\u47dc\0\u481b\0\u485a\0\u4899\0\u48d8"+
    "\0\u4917\0\u4956\0\u4995\0\u49d4\0\u4a13\0\u4a52\0\u4a91\0\u4ad0"+
    "\0\u4b0f\0\u4b4e\0\77\0\77\0\275\0\275\0\u4b8d\0\u4bcc"+
    "\0\u4c0b\0\u4c4a\0\u4c89\0\u4cc8\0\u4d07\0\u4d46\0\u4d85\0\u4dc4"+
    "\0\u4e03\0\77\0\275\0\u4e42\0\u4e81\0\u4ec0\0\u4eff\0\u4f3e"+
    "\0\u4f7d\0\u4fbc\0\u4ffb\0\u503a\0\u5079\0\u50b8\0\u50f7\0\u5136"+
    "\0\u5175\0\u51b4\0\77\0\275\0\u51f3\0\77\0\275\0\u5232"+
    "\0\u5271\0\u52b0\0\u52ef\0\u532e\0\u536d\0\u53ac\0\u53eb\0\77"+
    "\0\275\0\u542a\0\u5469\0\u54a8\0\u54e7\0\u5526\0\u5565\0\u55a4"+
    "\0\u55e3\0\u5622\0\u5661\0\u56a0\0\u56df\0\u571e\0\u575d\0\u579c"+
    "\0\77\0\275\0\u57db\0\77\0\u581a\0\275\0\u5859\0\u5898"+
    "\0\u58d7\0\u5916\0\u5955\0\u5994\0\u59d3\0\u5a12\0\u5a51\0\u5a90"+
    "\0\u5acf\0\u5b0e\0\u5b4d\0\u5b8c\0\u5bcb\0\u5c0a\0\u5c49\0\u5c88"+
    "\0\u5cc7\0\u5d06\0\77\0\u5d45\0\u5d84\0\u5dc3\0\u5e02\0\u5e41"+
    "\0\u5e80\0\u5ebf\0\u5efe\0\u5f3d\0\u5f7c\0\u5fbb\0\u5ffa\0\u6039"+
    "\0\u6078\0\u60b7\0\u60f6\0\u6135\0\u6174\0\u61b3\0\275\0\u61f2"+
    "\0\u6231\0\u6270\0\u62af\0\u62ee\0\u632d\0\u636c\0\u63ab\0\u63ea"+
    "\0\u6429\0\u6468\0\u64a7\0\u64e6\0\u6525\0\u6564\0\u65a3\0\u65e2"+
    "\0\u6621\0\u6660\0\u669f\0\u66de\0\u671d\0\u675c\0\77\0\275"+
    "\0\u679b\0\u67da\0\u6819\0\u6858\0\u6897\0\u68d6\0\u6915\0\u6954"+
    "\0\u6993\0\u69d2\0\77\0\275\0\u6a11\0\u6a50\0\u6a8f\0\u6ace"+
    "\0\275\0\u6b0d\0\u6b4c\0\u6b8b\0\u6bca\0\u6c09\0\u6c48\0\u6c87"+
    "\0\u6cc6\0\u6d05\0\u6d44\0\u6d83\0\u6dc2\0\u6e01\0\u6e40\0\u6e7f"+
    "\0\u6ebe\0\u6efd\0\u6f3c\0\u6f7b\0\u6fba\0\u6ff9\0\u7038\0\u7077"+
    "\0\u70b6\0\u70f5\0\77\0\275\0\u7134\0\u7173\0\u71b2\0\u71f1"+
    "\0\u7230\0\u726f\0\u72ae\0\u72ed\0\u732c\0\u736b\0\u73aa\0\u73e9"+
    "\0\u7428\0\u7467\0\u74a6\0\u74e5\0\u7524\0\u7563\0\u75a2\0\u75e1"+
    "\0\u7620\0\u765f\0\u769e\0\u76dd\0\u771c\0\u775b\0\u779a\0\u77d9"+
    "\0\u7818\0\u7857\0\u7896\0\u78d5\0\u7914\0\u7953\0\u7992\0\u79d1"+
    "\0\u7a10\0\u7a4f\0\u7a8e\0\u7acd\0\u7b0c\0\u7b4b\0\u7b8a\0\u7bc9"+
    "\0\77\0\275\0\77\0\275\0\u7c08\0\u7c47\0\77\0\u7c86"+
    "\0\u7cc5\0\275\0\u7d04\0\u7d43\0\u7d82\0\u7dc1\0\u7e00\0\u7e3f"+
    "\0\u7e7e\0\u7ebd\0\u7efc\0\u7f3b\0\u7f7a\0\u7fb9\0\u7ff8\0\u8037"+
    "\0\u8076\0\u80b5\0\77\0\275\0\u80f4\0\u8133\0\u8172\0\u81b1"+
    "\0\u81f0\0\u822f\0\u826e\0\u82ad\0\u82ec\0\u832b\0\u836a\0\u83a9"+
    "\0\u83e8\0\u8427\0\77\0\275\0\u8466\0\u84a5\0\u84e4\0\u8523"+
    "\0\u8562\0\u85a1\0\u85e0\0\u861f\0\u865e\0\u869d\0\u86dc\0\u871b"+
    "\0\u875a\0\77\0\u8799\0\u87d8\0\275\0\u8817\0\u8856\0\u8895"+
    "\0\77\0\275\0\77\0\u88d4\0\275\0\u8913\0\u8952\0\u8991"+
    "\0\u89d0\0\u8a0f\0\u8a4e\0\u8a8d\0\u8acc\0\u8b0b\0\u8b4a\0\u8b89"+
    "\0\u8bc8\0\u8c07\0\u8c46\0\77\0\u8c85\0\275\0\u8cc4\0\u8d03"+
    "\0\77\0\275\0\u8d42\0\u8d81\0\u8dc0\0\77\0\u8dff\0\u8e3e"+
    "\0\275\0\u8e7d\0\u8ebc\0\u8efb\0\u8f3a\0\u8f79\0\u8fb8\0\u8ff7"+
    "\0\u9036\0\u9075\0\u90b4\0\u90f3\0\u9132\0\77\0\u9171\0\275"+
    "\0\u91b0\0\u91ef\0\u922e\0\u926d\0\u92ac\0\u92eb\0\u932a\0\275"+
    "\0\77\0\275\0\u9369\0\u93a8\0\u93e7\0\u9426\0\u9465\0\u94a4"+
    "\0\77\0\275\0\77\0\u94e3\0\u9522\0\u9561\0\u95a0\0\u95df"+
    "\0\u961e\0\77\0\275\0\u965d\0\u969c\0\77\0\u96db\0\u971a"+
    "\0\u9759\0\u9798\0\u97d7\0\u9816\0\77\0\77\0\u9855\0\u9894"+
    "\0\u98d3\0\u9912\0\u9951\0\u9990\0\u99cf\0\77\0\u9a0e\0\77";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[720];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\2\4\1\5\1\6\1\7\1\2\1\10"+
    "\1\2\1\4\1\2\1\11\1\12\1\2\1\5\1\13"+
    "\1\14\1\15\1\16\1\4\1\5\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\6\1\25\1\26\1\27\1\30"+
    "\1\5\1\31\1\32\1\33\1\34\1\5\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\2\5\1\44\1\45"+
    "\3\5\1\2\1\5\1\2\1\16\1\20\1\33\1\36"+
    "\1\5\1\31\1\46\101\0\1\4\100\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\6\0\2\47\1\50\24\0\1\47"+
    "\47\0\2\51\1\50\24\0\1\51\52\0\1\52\2\0"+
    "\1\53\67\0\1\54\1\55\1\56\5\0\1\54\2\0"+
    "\1\54\1\0\3\54\1\0\3\54\1\0\1\54\2\0"+
    "\1\55\2\0\10\54\1\0\1\54\5\0\7\54\1\0"+
    "\1\54\1\0\6\54\17\0\1\57\13\0\1\23\3\0"+
    "\1\60\11\0\1\61\22\0\1\61\31\0\1\62\54\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\1\5\1\63"+
    "\1\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\2\5\1\64"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\2\5\1\65\4\5\1\0\1\5\1\0\1\5"+
    "\1\64\4\5\5\0\3\5\10\0\1\5\1\0\1\5"+
    "\1\66\1\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\6\5\1\67\1\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\1\5\1\70\6\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\1\5\1\71\1\5\1\0\1\5"+
    "\2\0\1\5\2\0\1\72\7\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\24\0\1\73\22\0"+
    "\1\74\21\0\1\73\12\0\3\5\10\0\1\5\1\0"+
    "\2\5\1\75\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\7\5\1\76\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\1\75\5\5\1\0\33\77\1\100\22\77"+
    "\1\101\10\77\1\102\4\77\1\101\2\77\32\0\1\23"+
    "\50\0\3\5\10\0\1\5\1\0\2\5\1\103\1\0"+
    "\2\5\1\104\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\4\5\1\105\2\5\1\0\1\5"+
    "\1\0\1\103\1\104\4\5\5\0\3\5\10\0\1\5"+
    "\1\0\1\5\1\106\1\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\31\5\0\1\54"+
    "\2\0\1\31\1\0\3\31\1\0\3\31\1\0\1\31"+
    "\2\0\1\31\2\0\10\31\1\0\1\31\5\0\7\31"+
    "\1\0\1\31\1\0\6\31\5\0\3\5\10\0\1\5"+
    "\1\0\1\5\1\107\1\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\1\110\1\111\6\5\1\0\1\5"+
    "\5\0\6\5\1\112\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\1\5\1\113"+
    "\1\114\1\115\1\116\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\5\1\114"+
    "\4\5\5\0\3\5\10\0\1\5\1\117\1\120\2\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\1\5"+
    "\1\121\1\5\1\122\1\123\2\0\1\5\2\0\1\124"+
    "\7\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\1\5\1\125"+
    "\1\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\1\126\7\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\1\5"+
    "\1\127\1\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\6\0\2\130\1\50\24\0\1\130\47\0"+
    "\2\131\25\0\1\131\47\0\2\132\25\0\1\132\42\0"+
    "\1\52\2\0\6\52\2\0\64\52\13\53\1\133\63\53"+
    "\4\0\3\54\5\0\1\54\2\0\1\54\1\0\3\54"+
    "\1\0\3\54\1\0\1\54\2\0\1\54\2\0\10\54"+
    "\1\0\1\54\5\0\7\54\1\0\1\54\1\0\6\54"+
    "\5\0\1\54\2\55\1\50\4\0\1\54\2\0\1\54"+
    "\1\0\3\54\1\0\3\54\1\0\1\54\2\0\1\55"+
    "\2\0\10\54\1\0\1\54\5\0\7\54\1\0\1\54"+
    "\1\0\6\54\5\0\3\54\1\50\4\0\1\54\2\0"+
    "\1\54\1\0\3\54\1\0\3\54\1\0\1\54\2\0"+
    "\1\54\2\0\10\54\1\0\1\54\5\0\7\54\1\0"+
    "\1\54\1\0\6\54\20\0\1\134\106\0\1\135\20\0"+
    "\1\136\20\0\1\135\1\0\1\136\33\0\2\137\105\0"+
    "\1\140\42\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\1\5\1\141"+
    "\6\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\4\5\1\142"+
    "\3\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\5\5\1\143"+
    "\2\5\1\0\1\5\5\0\3\5\1\144\3\5\1\0"+
    "\1\5\1\0\2\5\1\143\3\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\1\5\1\145\1\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\146\1\147\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\150"+
    "\1\151\2\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\2\5\1\152\4\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\7\5\1\153\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\21\0\2\154\24\0\1\155\72\0"+
    "\1\156\40\0\3\5\10\0\1\5\1\154\1\157\2\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\7\5"+
    "\1\160\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\3\5\1\161"+
    "\4\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\1\0\33\77\1\100\33\77\1\102\42\77\1\100"+
    "\4\77\1\162\26\77\1\102\7\77\33\0\1\77\33\0"+
    "\6\77\6\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\7\5\1\163"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\1\5"+
    "\1\164\1\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\2\5"+
    "\1\165\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\5\1\165"+
    "\4\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\4\5\1\166\2\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\1\5\1\167"+
    "\6\5\1\0\1\5\5\0\3\5\1\170\3\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\3\5\1\171\3\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\1\172\7\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\1\5\1\173\1\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\174\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\3\5\1\175\3\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\176\1\177\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\27\0\1\200\54\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\1\5\1\201\1\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\46\0\1\202\35\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\6\5\1\203\1\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\4\5\1\204\3\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\41\0\1\205\2\0\1\206"+
    "\37\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\1\5\1\207\2\5"+
    "\1\210\3\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\1\5"+
    "\1\211\6\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\2\5\1\212\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\1\5\1\212\4\5\5\0\3\5\10\0\1\5\1\213"+
    "\1\214\2\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\7\5"+
    "\1\215\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\6\0\2\216\1\50\24\0\1\216\47\0\2\217"+
    "\25\0\1\217\42\0\10\53\1\4\2\53\1\133\63\53"+
    "\20\0\2\220\103\0\1\221\100\0\2\222\70\0\1\223"+
    "\44\0\1\223\34\0\1\224\54\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\1\5\1\225\1\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\226\1\227\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\1\230\6\5\1\0\1\5\1\0"+
    "\4\5\1\230\1\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\1\231\2\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\62\0\1\232\21\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\3\5\1\233\3\5"+
    "\1\0\1\5\1\0\6\5\61\0\1\234\22\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\2\5"+
    "\1\235\4\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\1\5\1\236\1\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\237\1\240"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\45\0\1\241\25\0\1\241"+
    "\34\0\2\242\111\0\1\243\25\0\1\243\10\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\5\5\1\244\2\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\2\5\1\244\3\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\242\1\245\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\5\5\1\246\2\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\2\5\1\246\3\5"+
    "\1\0\22\77\1\247\10\77\1\100\33\77\1\102\7\77"+
    "\4\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\1\250\7\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\1\5\1\251"+
    "\1\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\252"+
    "\1\253\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\6\5\1\254\1\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\1\255\6\5"+
    "\1\0\1\5\1\0\4\5\1\255\1\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\2\5"+
    "\1\256\4\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\257\1\260\2\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\4\5\1\261\3\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\5\5\1\262\2\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\2\5\1\262\3\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\1\263\7\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\26\0\1\264"+
    "\55\0\3\5\10\0\1\5\1\0\3\5\1\0\1\265"+
    "\2\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\62\0"+
    "\1\266\21\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\3\5\1\267\3\5\1\0\1\5\1\0"+
    "\6\5\40\0\1\270\43\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\1\271\7\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\6\5\1\272\1\0\1\5\1\0"+
    "\6\5\40\0\1\273\4\0\1\274\25\0\1\274\70\0"+
    "\1\275\16\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\1\276\4\5"+
    "\1\277\2\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\2\5\1\277\3\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\6\5\1\300\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\301"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\21\0\2\302\61\0\3\5\10\0\1\5\1\302"+
    "\1\303\2\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\304\1\305\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\6\0\2\306\1\50\4\0\1\307\17\0\1\306\56\0"+
    "\1\307\104\0\1\310\113\0\1\311\62\0\1\312\44\0"+
    "\1\312\50\0\1\313\77\0\1\314\37\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\4\5\1\315\3\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\23\0\1\316\60\0"+
    "\3\5\10\0\1\5\1\0\1\5\1\317\1\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\2\5\1\320"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\1\5\1\320\4\5"+
    "\5\0\3\5\10\0\1\5\1\0\1\5\1\321\1\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\1\322"+
    "\7\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\31\0\2\323\51\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\323\1\324\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\46\0\1\325\35\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\6\5\1\326\1\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\2\5\1\327\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\1\5\1\327\4\5\23\0\1\330\60\0\3\5"+
    "\10\0\1\5\1\0\1\5\1\331\1\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\31\0\2\332"+
    "\110\0\1\333\62\0\1\334\41\0\1\334\11\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\332\1\335"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\4\5\1\336\3\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\2\5\1\337\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\1\5\1\337\4\5\1\0\33\77\1\100"+
    "\23\77\1\340\7\77\1\102\7\77\4\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\3\5\1\341\4\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\4\5\1\342"+
    "\2\5\1\0\1\5\1\0\6\5\24\0\1\343\44\0"+
    "\1\343\12\0\3\5\10\0\1\5\1\0\2\5\1\344"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\1\344"+
    "\5\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\3\5\1\345\3\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\1\5\1\346"+
    "\1\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\1\5\1\347"+
    "\1\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\27\0\1\350\54\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\1\5\1\351\1\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\352\1\353\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\1\5\1\354"+
    "\1\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\31\0\2\355\51\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\355\1\356\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\61\0\1\357\22\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\2\5\1\360\4\5\1\0"+
    "\1\5\1\0\6\5\30\0\1\361\41\0\1\361\11\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\2\5\1\362"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\1\5\1\362\4\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\1\363\7\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\21\0"+
    "\2\364\104\0\1\365\41\0\1\365\33\0\1\366\54\0"+
    "\3\5\10\0\1\5\1\364\1\367\2\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\2\5\1\370\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\1\5\1\370\4\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\1\5\1\371"+
    "\1\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\27\0"+
    "\1\372\133\0\1\373\17\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\5\5\1\374\1\5\1\0"+
    "\1\5\1\0\6\5\51\0\1\375\22\0\1\375\7\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\376\5\0"+
    "\7\5\1\0\1\5\1\0\3\5\1\376\2\5\6\0"+
    "\2\306\1\50\24\0\1\306\47\0\2\377\25\0\1\377"+
    "\65\0\1\u0100\44\0\1\u0100\46\0\1\u0101\100\0\1\u0102"+
    "\54\0\2\u0103\120\0\1\u0104\37\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\4\5\1\u0105\3\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\24\0\1\u0106\44\0\1\u0106"+
    "\12\0\3\5\10\0\1\5\1\0\2\5\1\u0107\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\u0107\5\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\1\5"+
    "\1\u0108\1\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\3\5\1\u0109\4\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\3\5\1\u010a\4\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\24\0\1\u010b\44\0\1\u010b\12\0\3\5\10\0\1\5"+
    "\1\0\2\5\1\u010c\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\1\u010c\5\5\27\0\1\u010d\54\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\1\5\1\u010e\1\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\5\5\1\u010f\2\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\2\5\1\u010f\3\5"+
    "\45\0\1\u0110\25\0\1\u0110\32\0\1\u0111\100\0\2\u0112"+
    "\51\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\5\5\1\u0113\2\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\2\5"+
    "\1\u0113\3\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\1\5\1\u0114\1\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\u0112\1\u0115\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\1\0\33\77\1\100\11\77\1\u0116\21\77\1\102\7\77"+
    "\4\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\5\5\1\u0117\2\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\2\5"+
    "\1\u0117\3\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\1\u0118"+
    "\7\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\43\0\1\u0119\40\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\3\5\1\u011a\4\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\2\5\1\u011b\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\1\u011b\5\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\3\5\1\u011c\4\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\57\0\1\u011d\15\0\1\u011d\6\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\1\u011e\6\5\1\0\1\5\1\0\4\5\1\u011e\1\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\3\5\1\u011f\4\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\40\0\1\u0120\43\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\1\u0121"+
    "\7\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\23\0\1\u0122\60\0\3\5\10\0\1\5\1\0"+
    "\1\5\1\u0123\1\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\31\0\2\u0124\51\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\u0124\1\u0125\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\3\5\1\u0126\4\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\40\0\1\u0127\66\0\1\u0128\41\0"+
    "\1\u0128\11\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\1\u0129\7\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\2\5"+
    "\1\u012a\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\5\1\u012a"+
    "\4\5\23\0\1\u012b\60\0\3\5\10\0\1\5\1\0"+
    "\1\5\1\u012c\1\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\31\0\2\u012d\51\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\u012d\1\u012e\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\6\0\2\u012f\25\0\1\u012f\66\0"+
    "\1\u0130\102\0\2\u0131\65\0\2\u0132\77\0\1\u0133\104\0"+
    "\2\u0134\51\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\u0134\1\u0135\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\27\0"+
    "\1\u0136\54\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\1\5\1\u0137\1\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\2\5\1\u0138\4\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\5\5\1\u0139"+
    "\2\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\2\5\1\u0139\3\5\40\0\1\u013a\43\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\1\u013b\7\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\21\0\2\u013c\61\0\3\5"+
    "\10\0\1\5\1\u013c\1\u013d\2\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\1\5\1\u013e\1\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\46\0\1\u013f\56\0"+
    "\1\u0140\55\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\6\5\1\u0141"+
    "\1\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\1\u0142\2\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\1\0\26\77\1\u0143\4\77\1\100\33\77\1\102\7\77"+
    "\4\0\3\5\10\0\1\5\1\0\3\5\1\0\1\5"+
    "\1\u0144\1\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\2\5"+
    "\1\u0145\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\5\1\u0145"+
    "\4\5\46\0\1\u0146\35\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\6\5\1\u0147\1\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\1\u0148\7\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\5\5"+
    "\1\u0149\2\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\2\5\1\u0149\3\5\23\0\1\u014a\60\0\3\5"+
    "\10\0\1\5\1\0\1\5\1\u014b\1\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\1\u014c\2\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\43\0\1\u014d\40\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\3\5\1\u014e\4\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\23\0"+
    "\1\u014f\60\0\3\5\10\0\1\5\1\0\1\5\1\u0150"+
    "\1\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\4\5\1\u0151"+
    "\3\5\1\0\1\5\5\0\3\5\1\u0152\3\5\1\0"+
    "\1\5\1\0\6\5\30\0\1\u0153\41\0\1\u0153\27\0"+
    "\1\u0154\60\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\2\5\1\u0155\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\1\5"+
    "\1\u0155\4\5\5\0\3\5\10\0\1\5\1\0\1\5"+
    "\1\u0156\1\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\30\0\1\u0157\41\0\1\u0157\11\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\2\5\1\u0158\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\1\5\1\u0158\4\5\44\0"+
    "\1\u0159\37\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\4\5\1\u015a"+
    "\3\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\15\0\1\u015b\107\0\1\u015c\112\0\1\u015d\57\0"+
    "\1\u015e\114\0\1\u015f\60\0\1\u0160\60\0\3\5\10\0"+
    "\1\5\1\0\1\5\1\u0161\1\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\21\0\2\u0162\61\0"+
    "\3\5\10\0\1\5\1\u0162\1\u0163\2\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\1\u0164\7\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\2\5\1\u0165\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\1\5\1\u0165\4\5\30\0\1\u0166"+
    "\41\0\1\u0166\11\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\2\5\1\u0167\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\1\5\1\u0167\4\5\45\0\1\u0168\25\0\1\u0168\10\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\5\5\1\u0169\2\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\2\5\1\u0169"+
    "\3\5\44\0\1\u016a\63\0\2\u016b\51\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\4\5\1\u016c\3\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\u016b\1\u016d\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\1\0\33\77\1\100\6\77\1\u016e"+
    "\24\77\1\102\7\77\4\0\3\5\10\0\1\u016f\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\3\5\1\u0170"+
    "\4\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\21\0\2\u0171\61\0\3\5\10\0\1\5\1\u0171"+
    "\1\u0172\2\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\u0173\1\u0174"+
    "\2\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\1\5\1\u0175\1\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\20\0\1\u0176\63\0\3\5\10\0\1\u0177\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\u0178\1\u0179\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\61\0"+
    "\1\u017a\22\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\2\5\1\u017b\4\5\1\0\1\5\1\0"+
    "\6\5\43\0\1\u017c\40\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\3\5\1\u017d\4\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\2\5\1\u017e\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\1\5\1\u017e\4\5\5\0\3\5\10\0\1\5"+
    "\1\0\1\5\1\u017f\1\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\47\0\1\u0180\34\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\7\5\1\u0181\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\40\0\1\u0182\43\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\1\u0183\7\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\6\0\2\u0184"+
    "\25\0\1\u0184\70\0\1\u0185\107\0\1\u0186\77\0\1\u0187"+
    "\66\0\2\u0188\70\0\1\u0189\44\0\1\u0189\12\0\3\5"+
    "\10\0\1\5\1\0\2\5\1\u018a\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\1\u018a\5\5\5\0\3\5"+
    "\10\0\1\5\1\u018b\1\u018c\2\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\u018d\1\u018e\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\43\0\1\u018f\40\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\3\5\1\u0190\4\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\40\0\1\u0191\43\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\1\u0192\7\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\31\0\2\u0193"+
    "\104\0\1\u0194\43\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\u0193\1\u0195\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\1\u0196\7\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\1\0"+
    "\33\77\1\100\24\77\1\u0197\6\77\1\102\7\77\4\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\5\5\1\u0198\2\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\2\5\1\u0198"+
    "\3\5\5\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\4\5\1\u0199"+
    "\3\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\46\0\1\u019a\35\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\6\5\1\u019b\1\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\u019c\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\21\0\2\u019d\61\0\3\5\10\0\1\5\1\u019d"+
    "\1\u019e\2\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\30\0\1\u019f\41\0\1\u019f\11\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\2\5\1\u01a0\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\1\5\1\u01a0\4\5\24\0"+
    "\1\u01a1\13\0\1\u01a2\3\0\1\u01a3\24\0\1\u01a1\12\0"+
    "\3\5\10\0\1\5\1\0\2\5\1\u01a4\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\1\u01a5\3\5\1\u01a6"+
    "\3\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\1\u01a4\5\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\1\5\1\u01a7\1\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\7\5"+
    "\1\u01a8\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\30\0\1\u01a9\41\0\1\u01a9\11\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\2\5\1\u01aa\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\1\5\1\u01aa\4\5\6\0\2\u01ab"+
    "\25\0\1\u01ab\71\0\1\u01ac\41\0\1\u01ac\34\0\1\u01ad"+
    "\41\0\1\u01ad\35\0\2\u01ae\110\0\1\u01af\72\0\1\u01b0"+
    "\43\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\1\u01b1\7\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\21\0"+
    "\2\u01b2\61\0\3\5\10\0\1\5\1\u01b2\1\u01b3\2\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\26\0\1\u01b4\55\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\1\u01b5\2\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\44\0\1\u01b6\1\u01b7\1\u01b8\24\0\1\u01b7\10\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\4\5\1\u01b9\1\u01ba\1\u01bb"+
    "\1\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\2\5\1\u01ba\3\5\23\0\1\u01bc\60\0\3\5\10\0"+
    "\1\5\1\0\1\5\1\u01bd\1\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\1\0\33\77\1\100"+
    "\3\77\1\u01be\27\77\1\102\7\77\4\0\3\5\10\0"+
    "\1\5\1\0\1\5\1\u01bf\1\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\1\5\1\u01c0\1\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\40\0\1\u01c1\43\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\1\u01c2\7\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\5\5\1\u01c3\2\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\2\5\1\u01c3\3\5"+
    "\31\0\2\u01c4\51\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\u01c4\1\u01c5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\27\0\1\u01c6\54\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\1\5\1\u01c7\1\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\46\0\1\u01c8\54\0\1\u01c9\44\0\1\u01c9"+
    "\35\0\1\u01ca\41\0\1\u01ca\11\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\6\5\1\u01cb\1\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\2\5\1\u01cc\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\1\u01cc\5\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\2\5\1\u01cd\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\1\5\1\u01cd\4\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\1\u01ce\7\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\u01cf\1\u01d0\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\43\0\1\u01d1\40\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\3\5\1\u01d2\4\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\21\0\2\u01d3\117\0\1\u01d4"+
    "\77\0\1\u01d5\63\0\2\u01d6\74\0\1\u01d7\41\0\1\u01d7"+
    "\11\0\3\5\10\0\1\5\1\0\3\5\1\0\2\5"+
    "\1\u01d8\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\5\1\u01d8"+
    "\4\5\64\0\1\u01d9\17\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\5\5\1\u01da\1\5\1\0"+
    "\1\5\1\0\6\5\31\0\2\u01db\51\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\u01db\1\u01dc\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\23\0\1\u01dd\103\0\1\u01de\41\0"+
    "\1\u01de\25\0\2\u01df\61\0\3\5\10\0\1\5\1\0"+
    "\1\5\1\u01e0\1\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\2\5\1\u01e1\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\1\5\1\u01e1\4\5\5\0\3\5\10\0\1\5"+
    "\1\u01df\1\u01e2\2\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\24\0\1\u01e3\44\0\1\u01e3\12\0"+
    "\3\5\10\0\1\5\1\0\2\5\1\u01e4\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\1\u01e4\5\5\1\0"+
    "\27\77\1\u01e5\3\77\1\100\33\77\1\102\1\77\1\u01e5"+
    "\5\77\4\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\3\5\1\u01e6\3\5\1\0\1\5\1\0"+
    "\6\5\30\0\1\u01e7\41\0\1\u01e7\11\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\2\5\1\u01e8\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\1\5\1\u01e8\4\5\5\0\3\5"+
    "\10\0\1\5\1\0\1\5\1\u01e9\1\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\57\0\1\u01ea"+
    "\15\0\1\u01ea\6\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\1\u01eb\6\5\1\0\1\5\1\0"+
    "\4\5\1\u01eb\1\5\63\0\1\u01ec\20\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\4\5\1\u01ed"+
    "\2\5\1\0\1\5\1\0\6\5\27\0\1\u01ee\114\0"+
    "\1\u01ef\25\0\1\u01ef\32\0\1\u01f0\54\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\1\5\1\u01f1\1\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\5\5\1\u01f2\2\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\2\5\1\u01f2\3\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\1\5\1\u01f3"+
    "\1\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\4\5\1\u01f4\3\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\51\0"+
    "\1\u01f5\22\0\1\u01f5\7\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\u01f6\5\0\7\5\1\0\1\5\1\0"+
    "\3\5\1\u01f6\2\5\44\0\1\u01f7\1\u01f8\1\u01f9\24\0"+
    "\1\u01f8\10\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\4\5\1\u01fa"+
    "\1\u01fb\1\u01fc\1\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\2\5\1\u01fb\3\5\31\0\2\u01fd\65\0"+
    "\2\u01fe\105\0\2\u01ff\111\0\1\u0200\25\0\1\u0200\26\0"+
    "\1\u0201\60\0\3\5\10\0\1\5\1\0\1\5\1\u0202"+
    "\1\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\40\0\1\u0203\43\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\1\u0204\7\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\62\0\1\u0205\45\0\2\u0206\112\0\1\u0207"+
    "\35\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\3\5\1\u0208\3\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\u0206\1\u0209\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\6\5\1\u020a\1\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\1\0\33\77"+
    "\1\100\3\77\1\u020b\27\77\1\102\7\77\4\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\2\5"+
    "\1\u020c\4\5\1\0\1\5\1\0\6\5\31\0\2\u020d"+
    "\51\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\u020d\1\u020e\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\41\0\1\u020f"+
    "\42\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\1\5\1\u0210\6\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\46\0\1\u0211\35\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\6\5"+
    "\1\u0212\1\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\26\0\1\u0213\101\0\2\u0214\104\0\1\u0215"+
    "\43\0\3\5\10\0\1\5\1\0\3\5\1\0\1\u0216"+
    "\2\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\u0214"+
    "\1\u0217\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\1\u0218\7\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\u0219\1\u021a\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\31\0\2\u021b\51\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\u021b\1\u021c\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\23\0\1\u021d\103\0\1\u021e\41\0\1\u021e"+
    "\25\0\2\u021f\61\0\3\5\10\0\1\5\1\0\1\5"+
    "\1\u0220\1\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\2\5\1\u0221\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\1\5\1\u0221\4\5\5\0\3\5\10\0\1\5\1\u021f"+
    "\1\u0222\2\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\23\0\1\u0223\76\0\1\u0224\120\0\1\u0225"+
    "\25\0\1\u0225\51\0\1\u0226\60\0\1\u0227\41\0\1\u0227"+
    "\11\0\3\5\10\0\1\5\1\0\3\5\1\0\2\5"+
    "\1\u0228\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\5\1\u0228"+
    "\4\5\61\0\1\u0229\43\0\1\u022a\110\0\1\u022b\43\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\2\5\1\u022c\4\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\1\u022d\2\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\1\u022e\7\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\1\0\33\77\1\100"+
    "\25\77\1\u022f\5\77\1\102\7\77\4\0\3\5\10\0"+
    "\1\5\1\0\1\5\1\u0230\1\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\23\0\1\u0231\60\0"+
    "\3\5\10\0\1\5\1\0\1\5\1\u0232\1\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\27\0"+
    "\1\u0233\54\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\1\5\1\u0234\1\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\24\0\1\u0235\44\0\1\u0235\12\0\3\5\10\0"+
    "\1\5\1\0\2\5\1\u0236\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\1\u0236\5\5\23\0\1\u0237\136\0"+
    "\1\u0238\57\0\1\u0239\37\0\3\5\10\0\1\5\1\0"+
    "\1\5\1\u023a\1\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\4\5\1\u023b\2\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\4\5\1\u023c\3\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\23\0\1\u023d\60\0\3\5\10\0"+
    "\1\5\1\0\1\5\1\u023e\1\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\44\0\1\u023f\37\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\4\5\1\u0240\3\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\62\0"+
    "\1\u0241\45\0\2\u0242\112\0\1\u0243\35\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\3\5\1\u0244"+
    "\3\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\u0242\1\u0245\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\5\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\6\5\1\u0246\1\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\24\0\1\u0247\44\0\1\u0247\46\0"+
    "\1\u0248\103\0\1\u0249\77\0\1\u024a\76\0\1\u024b\34\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\7\5\1\u024c\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\23\0\1\u024d"+
    "\104\0\2\u024e\74\0\1\u024f\41\0\1\u024f\11\0\3\5"+
    "\10\0\1\5\1\0\1\5\1\u0250\1\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\u024e\1\u0251"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\2\5\1\u0252\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\1\5\1\u0252\4\5\1\0\26\77\1\u0253"+
    "\4\77\1\100\33\77\1\102\7\77\4\0\3\5\10\0"+
    "\1\5\1\0\2\5\1\u0254\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\1\u0254\5\5\45\0\1\u0255\25\0"+
    "\1\u0255\10\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\5\5\1\u0256"+
    "\2\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\2\5\1\u0256\3\5\46\0\1\u0257\61\0\2\u0258\51\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\6\5\1\u0259\1\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\u0258"+
    "\1\u025a\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\24\0\1\u025b\44\0"+
    "\1\u025b\12\0\3\5\10\0\1\5\1\0\2\5\1\u025c"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\1\u025c"+
    "\5\5\40\0\1\u025d\43\0\3\5\10\0\1\5\1\0"+
    "\3\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\1\u025e\7\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\61\0\1\u025f\43\0\1\u0260\110\0\1\u0261"+
    "\43\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\2\5\1\u0262\4\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\3\5\1\0\1\u0263"+
    "\2\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\1\u0264\7\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\33\0\1\u0265"+
    "\74\0\2\u0266\113\0\1\u0267\72\0\1\u0268\57\0\1\u0269"+
    "\44\0\1\u0269\45\0\1\u026a\67\0\2\u026b\51\0\3\5"+
    "\10\0\1\5\1\0\2\5\1\u026c\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\1\u026c\5\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\1\u026d\7\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\5\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\3\5\1\u026b\1\u026e\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\6\5\1\0\33\77\1\100\10\77\1\u026f"+
    "\22\77\1\102\2\77\1\u026f\4\77\4\0\3\5\10\0"+
    "\1\5\1\0\3\5\1\0\1\5\1\u0270\1\5\1\0"+
    "\1\5\2\0\1\5\2\0\10\5\1\0\1\5\5\0"+
    "\7\5\1\0\1\5\1\0\6\5\40\0\1\u0271\43\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\1\u0272\7\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\23\0\1\u0273"+
    "\76\0\1\u0274\60\0\3\5\10\0\1\5\1\0\1\5"+
    "\1\u0275\1\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\1\5"+
    "\1\u0276\1\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\44\0\1\u0277\37\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\4\5\1\u0278\3\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\23\0\1\u0279\104\0\2\u027a"+
    "\74\0\1\u027b\41\0\1\u027b\11\0\3\5\10\0\1\5"+
    "\1\0\1\5\1\u027c\1\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\5\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\3\5\1\u027a\1\u027d\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\5\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\2\5\1\u027e\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\1\5\1\u027e\4\5\34\0\1\u027f\106\0\1\u0280\61\0"+
    "\1\u0281\77\0\1\u0282\41\0\1\u0282\33\0\1\u0283\72\0"+
    "\1\u0284\60\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\1\5\1\u0285\1\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\5\0\3\5\10\0\1\5\1\0\1\5\1\u0286"+
    "\1\5\1\0\3\5\1\0\1\5\2\0\1\5\2\0"+
    "\10\5\1\0\1\5\5\0\7\5\1\0\1\5\1\0"+
    "\6\5\1\0\27\77\1\u0287\3\77\1\100\33\77\1\102"+
    "\1\77\1\u0287\5\77\4\0\3\5\10\0\1\5\1\0"+
    "\2\5\1\u0288\1\0\3\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\1\u0288\5\5\24\0\1\u0289\44\0\1\u0289\12\0"+
    "\3\5\10\0\1\5\1\0\2\5\1\u028a\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\1\u028a\5\5\31\0"+
    "\2\u028b\51\0\3\5\10\0\1\5\1\0\3\5\1\0"+
    "\3\5\1\u028b\1\u028c\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\6\5\24\0"+
    "\1\u028d\44\0\1\u028d\45\0\1\u028e\67\0\2\u028f\51\0"+
    "\3\5\10\0\1\5\1\0\2\5\1\u0290\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\10\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\1\u0290\5\5\5\0"+
    "\3\5\10\0\1\5\1\0\3\5\1\0\3\5\1\0"+
    "\1\5\2\0\1\5\2\0\1\u0291\7\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\6\5\5\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\u028f\1\u0292"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\35\0\1\u0293\72\0\2\u0294"+
    "\65\0\2\u0295\103\0\1\u0296\73\0\1\u0297\44\0\1\u0297"+
    "\12\0\3\5\10\0\1\5\1\0\2\5\1\u0298\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\u0298\5\5"+
    "\1\0\22\77\1\u0299\10\77\1\100\33\77\1\102\7\77"+
    "\4\0\3\5\10\0\1\5\1\0\3\5\1\0\3\5"+
    "\1\0\1\5\2\0\1\5\2\0\5\5\1\u029a\2\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\2\5"+
    "\1\u029a\3\5\23\0\1\u029b\60\0\3\5\10\0\1\5"+
    "\1\0\1\5\1\u029c\1\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\27\0\1\u029d\72\0\1\u029e"+
    "\60\0\3\5\10\0\1\5\1\0\3\5\1\0\1\5"+
    "\1\u029f\1\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\5\0\3\5\10\0\1\5\1\0\1\5\1\u02a0\1\5"+
    "\1\0\3\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\10\0\1\u02a1\133\0\1\u02a2\25\0\1\u02a2\46\0\1\u02a3"+
    "\73\0\1\u02a4\103\0\1\u02a5\25\0\1\u02a5\10\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\5\5\1\u02a6\2\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\2\5\1\u02a6\3\5"+
    "\1\0\20\77\2\u02a7\11\77\1\100\33\77\1\102\7\77"+
    "\4\0\3\5\10\0\1\5\1\0\3\5\1\0\1\5"+
    "\1\u02a8\1\5\1\0\1\5\2\0\1\5\2\0\10\5"+
    "\1\0\1\5\5\0\7\5\1\0\1\5\1\0\6\5"+
    "\24\0\1\u02a9\44\0\1\u02a9\12\0\3\5\10\0\1\5"+
    "\1\0\2\5\1\u02aa\1\0\3\5\1\0\1\5\2\0"+
    "\1\5\2\0\10\5\1\0\1\5\5\0\7\5\1\0"+
    "\1\5\1\0\1\u02aa\5\5\24\0\1\u02ab\44\0\1\u02ab"+
    "\12\0\3\5\10\0\1\5\1\0\2\5\1\u02ac\1\0"+
    "\3\5\1\0\1\5\2\0\1\5\2\0\10\5\1\0"+
    "\1\5\5\0\7\5\1\0\1\5\1\0\1\u02ac\5\5"+
    "\7\0\1\u02ad\135\0\1\u02ae\60\0\1\u02af\41\0\1\u02af"+
    "\45\0\1\u02b0\64\0\1\u02b1\54\0\3\5\10\0\1\5"+
    "\1\0\3\5\1\0\1\5\1\u02b2\1\5\1\0\1\5"+
    "\2\0\1\5\2\0\10\5\1\0\1\5\5\0\7\5"+
    "\1\0\1\5\1\0\6\5\1\0\33\77\1\u02b3\33\77"+
    "\1\102\7\77\44\0\1\u02b4\25\0\1\u02b4\10\0\3\5"+
    "\10\0\1\5\1\0\3\5\1\0\3\5\1\0\1\5"+
    "\2\0\1\5\2\0\5\5\1\u02b5\2\5\1\0\1\5"+
    "\5\0\7\5\1\0\1\5\1\0\2\5\1\u02b5\3\5"+
    "\34\0\1\u02b6\111\0\1\u02b7\56\0\1\u02b8\100\0\2\u02b9"+
    "\73\0\1\u02ba\54\0\3\5\10\0\1\5\1\0\3\5"+
    "\1\0\1\5\1\u02bb\1\5\1\0\1\5\2\0\1\5"+
    "\2\0\10\5\1\0\1\5\5\0\7\5\1\0\1\5"+
    "\1\0\6\5\25\0\1\u02bc\100\0\1\u02bd\20\0\1\u02be"+
    "\66\0\1\u02bf\100\0\1\u02c0\53\0\1\u02c1\100\0\2\u02c2"+
    "\115\0\1\u02c3\75\0\1\u02c4\74\0\1\u02c5\76\0\1\u02c6"+
    "\71\0\2\u02c7\113\0\1\u02c8\71\0\1\u02c9\74\0\1\u02ca"+
    "\76\0\1\u02cb\75\0\1\u02cc\106\0\1\u02cd\65\0\1\u02ce"+
    "\100\0\1\u02cf\74\0\1\u02d0\41\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[39501];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\16\1\1\11\11\1\1\11"+
    "\1\1\5\11\2\1\1\11\1\1\2\0\1\1\1\0"+
    "\3\1\4\0\10\1\1\0\3\1\1\0\1\11\2\0"+
    "\12\1\1\0\1\1\1\0\2\1\1\0\7\1\7\0"+
    "\5\1\1\0\1\1\1\0\3\1\3\0\3\1\1\0"+
    "\13\1\1\0\1\1\1\0\1\1\1\0\2\1\2\0"+
    "\4\1\1\0\3\1\6\0\1\1\1\0\3\1\1\0"+
    "\1\1\1\0\2\1\1\0\1\1\3\0\3\1\1\0"+
    "\2\1\1\0\4\1\1\0\4\1\1\0\1\1\1\0"+
    "\1\1\1\0\2\1\3\0\3\1\2\0\1\1\1\0"+
    "\2\1\6\0\1\1\1\0\4\1\1\0\1\1\1\0"+
    "\2\1\1\11\1\1\3\0\3\1\1\0\2\1\1\0"+
    "\4\1\1\11\1\1\1\0\2\1\1\0\1\1\1\0"+
    "\1\1\1\0\2\1\1\11\2\0\3\1\1\11\1\0"+
    "\1\1\1\0\1\1\6\0\1\1\1\0\4\1\1\0"+
    "\1\1\1\0\2\1\1\0\1\11\1\0\3\1\1\0"+
    "\2\1\1\0\3\1\1\0\2\1\1\11\1\1\1\0"+
    "\1\1\1\0\2\1\2\0\2\1\1\0\1\1\1\0"+
    "\1\1\6\0\1\1\1\0\3\1\1\0\1\1\1\0"+
    "\2\1\2\0\2\1\1\0\2\1\1\0\3\1\1\0"+
    "\2\1\1\0\5\1\2\11\2\1\1\0\1\1\1\0"+
    "\1\1\6\0\1\1\1\11\3\1\1\0\1\1\1\0"+
    "\1\1\2\0\2\1\1\0\2\1\1\0\1\1\1\11"+
    "\2\1\1\11\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\3\1\1\11\1\1\1\0\1\1\6\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\1\1\0"+
    "\1\11\2\1\1\0\2\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\3\0\5\1\1\0\1\1\1\11\5\0"+
    "\1\1\1\0\1\1\1\0\1\1\3\0\3\1\1\0"+
    "\1\1\1\0\2\1\1\0\2\1\1\0\1\1\1\0"+
    "\1\1\3\0\4\1\1\0\1\1\1\0\1\1\4\0"+
    "\1\11\1\1\1\0\1\1\1\0\1\1\3\0\3\1"+
    "\1\11\1\1\1\0\1\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\3\0\4\1\1\0\1\1\3\0\3\1"+
    "\5\0\1\1\1\11\1\1\3\0\3\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\3\0\3\1"+
    "\1\0\1\1\1\0\1\1\3\0\3\1\5\0\1\1"+
    "\3\0\3\1\1\0\1\1\1\11\1\1\1\11\1\1"+
    "\1\0\1\1\1\11\2\0\3\1\1\0\1\1\1\0"+
    "\1\1\3\0\3\1\4\0\1\11\1\1\3\0\3\1"+
    "\1\0\1\1\1\0\1\1\2\0\2\1\1\11\1\1"+
    "\1\0\1\1\3\0\3\1\5\0\1\11\1\0\3\1"+
    "\1\0\1\1\1\11\1\1\1\11\1\0\2\1\1\0"+
    "\1\1\3\0\3\1\5\0\1\11\2\1\1\0\1\1"+
    "\1\11\1\1\1\0\1\1\1\0\1\11\1\0\3\1"+
    "\5\0\1\1\1\0\1\1\1\0\1\1\1\0\1\11"+
    "\2\1\5\0\1\1\1\0\1\1\1\11\1\1\1\0"+
    "\1\1\4\0\1\11\1\1\1\11\1\0\1\1\4\0"+
    "\1\11\1\1\2\0\1\11\6\0\2\11\7\0\1\11"+
    "\1\0\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[720];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    private Symbol symbol(int type) {
        return new Symbol(type, yyline, yycolumn);
    }
    
    private Symbol symbol(int type, Object value) {
        return new Symbol(type, yyline, yycolumn, value);
    }
    
    private LinkedList<String> listaErrores;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public LexicoWeb(java.io.Reader in) {
      yyline = 1;
    yycolumn = 1;
    listaErrores = new LinkedList<>();
    yybegin(YYINITIAL);
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 236) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
              {
                return symbol(sym.EOF);
              }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { String errorMsg = "Error lexico: Caracter invalido <" + yytext() + "> en linea " + (yyline + 1) + ", columna " + (yycolumn + 1) + ")";
        listaErrores.add(errorMsg);
        System.out.println(errorMsg);
            } 
            // fall through
          case 67: break;
          case 2: 
            { /* ignorar */
            } 
            // fall through
          case 68: break;
          case 3: 
            { return symbol(sym.IDENTIFIER, yytext());
            } 
            // fall through
          case 69: break;
          case 4: 
            { return symbol(sym.NUMBER, Double.parseDouble(yytext()));
            } 
            // fall through
          case 70: break;
          case 5: 
            { return symbol(sym.ID_ESPECIAL, yytext());
            } 
            // fall through
          case 71: break;
          case 6: 
            { return symbol(sym.OPERADOR, yytext());
            } 
            // fall through
          case 72: break;
          case 7: 
            { return symbol(sym.DOS_PUNTOS);
            } 
            // fall through
          case 73: break;
          case 8: 
            { return symbol(sym.LLAVE_ABRE);
            } 
            // fall through
          case 74: break;
          case 9: 
            { return symbol(sym.LLAVE_CIERRA);
            } 
            // fall through
          case 75: break;
          case 10: 
            { return symbol(sym.CORCHETE_ABRE);
            } 
            // fall through
          case 76: break;
          case 11: 
            { return symbol(sym.CORCHETE_CIERRA);
            } 
            // fall through
          case 77: break;
          case 12: 
            { return symbol(sym.COMA);
            } 
            // fall through
          case 78: break;
          case 13: 
            { return symbol(sym.SEPARADOR_OPCIONES);
            } 
            // fall through
          case 79: break;
          case 14: 
            { return symbol(sym.OR);
            } 
            // fall through
          case 80: break;
          case 15: 
            { return symbol(sym.ID);
            } 
            // fall through
          case 81: break;
          case 16: 
            { return symbol(sym.STRING, yytext());
            } 
            // fall through
          case 82: break;
          case 17: 
            { return symbol(sym.NOT);
            } 
            // fall through
          case 83: break;
          case 18: 
            { return symbol(sym.AND);
            } 
            // fall through
          case 84: break;
          case 19: 
            { return symbol(sym.POR);
            } 
            // fall through
          case 85: break;
          case 20: 
            { return symbol(sym.TEMA);
            } 
            // fall through
          case 86: break;
          case 21: 
            { return symbol(sym.RADIO);
            } 
            // fall through
          case 87: break;
          case 22: 
            { return symbol(sym.COMBO);
            } 
            // fall through
          case 88: break;
          case 23: 
            { return symbol(sym.CLASE);
            } 
            // fall through
          case 89: break;
          case 24: 
            { return symbol(sym.FILAS);
            } 
            // fall through
          case 90: break;
          case 25: 
            { return symbol(sym.BOOLEAN, Boolean.parseBoolean(yytext()));
            } 
            // fall through
          case 91: break;
          case 26: 
            { return symbol(sym.NOMBRE);
            } 
            // fall through
          case 92: break;
          case 27: 
            { return symbol(sym.INDICE);
            } 
            // fall through
          case 93: break;
          case 28: 
            { return symbol(sym.TRIVIA);
            } 
            // fall through
          case 94: break;
          case 29: 
            { return symbol(sym.REPORTE);
            } 
            // fall through
          case 95: break;
          case 30: 
            { return symbol(sym.USUARIO);
            } 
            // fall through
          case 96: break;
          case 31: 
            { return symbol(sym.FILTRAR);
            } 
            // fall through
          case 97: break;
          case 32: 
            { return symbol(sym.FICHERO);
            } 
            // fall through
          case 98: break;
          case 33: 
            { return symbol(sym.OPCIONES);
            } 
            // fall through
          case 99: break;
          case 34: 
            { return symbol(sym.COLUMNAS);
            } 
            // fall through
          case 100: break;
          case 35: 
            { return symbol(sym.CHECKBOX);
            } 
            // fall through
          case 101: break;
          case 36: 
            { return symbol(sym.PASSWORD);
            } 
            // fall through
          case 102: break;
          case 37: 
            { return symbol(sym.RESPUESTA);
            } 
            // fall through
          case 103: break;
          case 38: 
            { return symbol(sym.ID_TRIVIA);
            } 
            // fall through
          case 104: break;
          case 39: 
            { return symbol(sym.FECHA, yytext());
            } 
            // fall through
          case 105: break;
          case 40: 
            { return symbol(sym.AREA_TEXTO);
            } 
            // fall through
          case 106: break;
          case 41: 
            { return symbol(sym.SELECCIONAR);
            } 
            // fall through
          case 107: break;
          case 42: 
            { return symbol(sym.INSTITUCION);
            } 
            // fall through
          case 108: break;
          case 43: 
            { return symbol(sym.CAMPO_TEXTO);
            } 
            // fall through
          case 109: break;
          case 44: 
            { return symbol(sym.NUEVA_TRIVIA);
            } 
            // fall through
          case 110: break;
          case 45: 
            { return symbol(sym.LOGIN_USUARIO);
            } 
            // fall through
          case 111: break;
          case 46: 
            { return symbol(sym.TEXTO_VISIBLE);
            } 
            // fall through
          case 112: break;
          case 47: 
            { return symbol(sym.USUARIO_NUEVO);
            } 
            // fall through
          case 113: break;
          case 48: 
            { return symbol(sym.NUEVO_PASSWORD);
            } 
            // fall through
          case 114: break;
          case 49: 
            { return symbol(sym.FECHA_CREACION);
            } 
            // fall through
          case 115: break;
          case 50: 
            { return symbol(sym.ELIMINAR_TRIVIA);
            } 
            // fall through
          case 116: break;
          case 51: 
            { return symbol(sym.TIEMPO_PREGUNTA);
            } 
            // fall through
          case 117: break;
          case 52: 
            { return symbol(sym.USUARIO_ANTIGUO);
            } 
            // fall through
          case 118: break;
          case 53: 
            { return symbol(sym.ELIMINAR_USUARIO);
            } 
            // fall through
          case 119: break;
          case 54: 
            { return symbol(sym.USUARIO_CREACION);
            } 
            // fall through
          case 120: break;
          case 55: 
            { return symbol(sym.MODIFICAR_TRIVIA);
            } 
            // fall through
          case 121: break;
          case 56: 
            { return symbol(sym.MODIFICAR_USUARIO);
            } 
            // fall through
          case 122: break;
          case 57: 
            { return symbol(sym.AGREGAR_COMPONENTE);
            } 
            // fall through
          case 123: break;
          case 58: 
            { return symbol(sym.FECHA_MODIFICACION);
            } 
            // fall through
          case 124: break;
          case 59: 
            { return symbol(sym.ELIMINAR_COMPONENTE);
            } 
            // fall through
          case 125: break;
          case 60: 
            { return symbol(sym.BLOQUE_PARAMETROS);
            } 
            // fall through
          case 126: break;
          case 61: 
            { return symbol(sym.MODIFICAR_COMPONENTE);
            } 
            // fall through
          case 127: break;
          case 62: 
            { return symbol(sym.REALIZAR_SOLICITUD);
            } 
            // fall through
          case 128: break;
          case 63: 
            { return symbol(sym.XSON_VERSION);
            } 
            // fall through
          case 129: break;
          case 64: 
            { return symbol(sym.REALIZAR_SOLICITUDES);
            } 
            // fall through
          case 130: break;
          case 65: 
            { return symbol(sym.FIN_SOLICITUD);
            } 
            // fall through
          case 131: break;
          case 66: 
            { return symbol(sym.FIN_SOLICITUDES);
            } 
            // fall through
          case 132: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java LexicoWeb [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        LexicoWeb scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new LexicoWeb(reader);
          while ( !scanner.zzAtEOF ) scanner.next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
